$00 $280000 001010000000000000000000 AR := PC ; fetch addr
$01 $050000 000001010000000000000000 DR := {AR}
$02 $908000 100100001000000000000000 OP := DR & PC := PC+1
$03 $280000 001010000000000000000000 AR := PC ; fetch op
$04 $150000 000101010000000000000000 DR := {AR} & PC := PC+1
$05 $ffffff 111111111111111111111111 ; decode
$06 $008080 000000001000000010000000 [lda #$nn] AX := DR
$07 $000000 000000000000000000000000 ; execute
$08 $088000 000010001000000000000000 [lda $nn] AR := DR
$09 $050000 000001010000000000000000 DR := {AR}
$0a $008080 000000001000000010000000 AX := DR
$0b $000000 000000000000000000000000 ; execute
$0c $008020 000000001000000000100000 [ldb #$nn]Â BX := DR
$0d $000000 000000000000000000000000 ; execute
$0e $088000 000010001000000000000000 [ldb $nn] AR := DR
$0f $050000 000001010000000000000000 DR := {AR}
$10 $008020 000000001000000000100000 BX := DR
$11 $000000 000000000000000000000000 ; execute
$12 $088000 000010001000000000000000 [sta $nn] AR := DR
$13 $010040 000000010000000001000000 DR := AX
$14 $028000 000000101000000000000000 {AR} := DR
$15 $000000 000000000000000000000000 ; execute
$16 $008002 000000001000000000000010 [stb #$nn,a] Z := DR + AX
$17 $080001 000010000000000000000001 AR := Z
$18 $010010 000000010000000000010000 DR := BX
$19 $028000 000000101000000000000000 {AR} := DR
$1a $000000 000000000000000000000000 ; execute
$1b $088000 000010001000000000000000 [stb $nn] AR := DR
$1c $010010 000000010000000000010000 DR := BX
$1d $028000 000000101000000000000000 {AR} := DR
$1e $000000 000000000000000000000000 ; execute
$1f $000060 000000000000000001100000 [tab] BX := AX
$20 $000000 000000000000000000000000 ; execute
$21 $000090 000000000000000010010000 [tba] AX := BX
$22 $000000 000000000000000000000000 ; execute
$23 $008002 000000001000000000000010 [adc #$nn] Z := AX + DR
$24 $000081 000000000000000010000001 AX := Z
$25 $000000 000000000000000000000000 ; execute
$26 $088000 000010001000000000000000 [adc $nn] AR := DR
$27 $050000 000001010000000000000000 DR := {AR}
$28 $008002 000000001000000000000010 Z := AX + DR
$29 $000081 000000000000000010000001 AX := Z
$2a $000000 000000000000000000000000 ; execute
$2b $008102 000000001000000100000010 [sbc #$nn] Z := AX - DR
$2c $000081 000000000000000010000001 AX := Z
$2d $000000 000000000000000000000000 ; execute
$2e $088000 000010001000000000000000 [sbc $nn] AR := DR
$2f $050000 000001010000000000000000 DR := {AR}
$30 $008102 000000001000000100000010 Z := AX - DR
$31 $000081 000000000000000010000001 AX := Z
$32 $000000 000000000000000000000000 ; execute
$33 $001002 000000000001000000000010 [inc] Z := AX + 1
$34 $000081 000000000000000010000001 AX := Z
$35 $000000 000000000000000000000000 ; execute
$36 $001102 000000000001000100000010 [dec] Z := AX - 1
$37 $000081 000000000000000010000001 AX := Z
$38 $000000 000000000000000000000000 ; execute
$39 $008202 000000001000001000000010 [and #$nn] Z = AX AND DR
$3a $000081 000000000000000010000001 AX := Z
$3b $000000 000000000000000000000000 ; execute
$3c $088000 000010001000000000000000 [and $nn] AR := DR
$3d $050000 000001010000000000000000 DR := {AR}
$3e $008202 000000001000001000000010 Z := AX AND DR
$3f $000081 000000000000000010000001 AX := Z
$40 $000000 000000000000000000000000 ; execute
$41 $008302 000000001000001100000010 [ora #$nn] Z = AX OR DR
$42 $000081 000000000000000010000001 AX := Z
$43 $000000 000000000000000000000000 ; execute
$44 $088000 000010001000000000000000 [ora $nn] AR := DR
$45 $050000 000001010000000000000000 DR := {AR}
$46 $008302 000000001000001100000010 Z := AX OR DR
$47 $000081 000000000000000010000001 AX := Z
$48 $000000 000000000000000000000000 ; execute
$49 $008402 000000001000010000000010 [eor #$nn] Z = AX XOR DR
$4a $000081 000000000000000010000001 AX := Z
$4b $000000 000000000000000000000000 ; execute
$4c $088000 000010001000000000000000 [eor $nn] AR := DR
$4d $050000 000001010000000000000000 DR := {AR}
$4e $008402 000000001000010000000010 Z := AX XOR DR
$4f $000081 000000000000000010000001 AX := Z
$50 $000000 000000000000000000000000 ; execute
$51 $000502 000000000000010100000010 [lsl] Z = AX LSL
$52 $000081 000000000000000010000001 AX := Z
$53 $000000 000000000000000000000000 ; execute
$54 $000602 000000000000011000000010 [lsr] Z = AX LSR
$55 $000081 000000000000000010000001 AX := Z
$56 $000000 000000000000000000000000 ; execute
$57 $000702 000000000000011100000010 [asl] Z = AX ASL
$58 $000081 000000000000000010000001 AX := Z
$59 $000000 000000000000000000000000 ; execute
$5a $000802 000000000000100000000010 [rol] Z = AX ROL
$5b $000081 000000000000000010000001 AX := Z
$5c $000000 000000000000000000000000 ; execute
$5d $000902 000000000000100100000010 [ror] Z = AX ROR
$5e $000081 000000000000000010000001 AX := Z
$5f $000000 000000000000000000000000 ; execute
$60 $004000 000000000100000000000000 [bpl]
$61 $000000 000000000000000000000000 ; execute
$62 $004100 000000000100000100000000 [bmi]
$63 $000000 000000000000000000000000 ; execute
$64 $004200 000000000100001000000000 [bcc]
$65 $000000 000000000000000000000000 ; execute
$66 $004300 000000000100001100000000 [bcs]
$67 $000000 000000000000000000000000 ; execute
$68 $004400 000000000100010000000000 [bne]
$69 $000000 000000000000000000000000 ; execute
$6a $004500 000000000100010100000000 [beq]
$6b $000000 000000000000000000000000 ; execute
$6c $004600 000000000100011000000000 [sec]
$6d $000000 000000000000000000000000 ; execute
$6e $004700 000000000100011100000000 [clc]
$6f $000000 000000000000000000000000 ; execute
$70 $008102 000000001000000100000010 [cmp #$nn] Z := AX - DR
$71 $000000 000000000000000000000000 ; execute
$72 $088000 000010001000000000000000 [cmp $nn] AR := DR
$73 $050000 000001010000000000000000 DR := {AR}
$74 $008102 000000001000000100000010 Z := AX - DR
$75 $000000 000000000000000000000000 ; execute
$76 $080004 000010000000000000000100 [pha] AR := SP
$77 $010040 000000010000000001000000 DR := AX
$78 $028000 000000101000000000000000 {AR} := DR
$79 $000084 000000000000000010000100 AX := SP
$7a $001002 000000000001000000000010 Z := AX + 1
$7b $000009 000000000000000000001001 SP := Z
$7c $008080 000000001000000010000000 AX := DR
$7d $000000 000000000000000000000000 ; execute
$7e $000084 000000000000000010000100 [pop] AX := SP
$7f $001102 000000000001000100000010 Z = AX - 1
$80 $080009 000010000000000000001001 SP := Z & AR := Z
$81 $050000 000001010000000000000000 DR := {AR}
$82 $008080 000000001000000010000000 AX := DR
$83 $000000 000000000000000000000000 ; execute
$84 $400000 010000000000000000000000 [jmp #$nn] PC := DR
$85 $000000 000000000000000000000000 ; execute
$86 $088000 000010001000000000000000 [jmp $nn] AR := DR
$87 $050000 000001010000000000000000 DR := {AR}
$88 $400000 010000000000000000000000 PC := DR
$89 $000000 000000000000000000000000 ; execute
$8a $008080 000000001000000010000000 [jsr #$nn] AX := DR ; keep operand
$8b $080004 000010000000000000000100 AR := SP ; save sp
$8c $210000 001000010000000000000000 DR := PC
$8d $028000 000000101000000000000000 {AR} := DR
$8e $010040 000000010000000001000000 DR := AX ; change pc
$8f $400000 010000000000000000000000 PC := DR
$90 $000084 000000000000000010000100 AX := SP ; increase sp
$91 $001002 000000000001000000000010 Z := AX + 1
$92 $000009 000000000000000000001001 SP := Z
$93 $000000 000000000000000000000000 ; execute
$94 $088000 000010001000000000000000 [jsr $nn] AR := DR ; read jump address
$95 $050000 000001010000000000000000 DR := {AR}
$96 $200080 001000000000000010000000 AX := PC ; store pc
$97 $400000 010000000000000000000000 PC := DR ; jump to address
$98 $010040 000000010000000001000000 DR := AX
$99 $080084 000010000000000010000100 AR := SP & AX := SP
$9a $001002 000000000001000000000010 Z := AX + 1
$9b $000009 000000000000000000001001 SP := Z
$9c $000000 000000000000000000000000 ; execute
$9d $000084 000000000000000010000100 [rts] AX := SP
$9e $001102 000000000001000100000010 Z := AX - 1
$9f $080009 000010000000000000001001 SP := Z & AR := Z
$a0 $050000 000001010000000000000000 DR := {AR}
$a1 $400000 010000000000000000000000 PC := DR
$a2 $000000 000000000000000000000000 ; execute
$a3 $002000 000000000010000000000000 [cib] ; clear input buffer
$a4 $000000 000000000000000000000000 ; execute
